
 afxDebug.c:386?AfxAttachDebugTerminal()
      ::::::::  :::       :::     :::     :::::::::  :::::::::   ::::::::      
     :+:    :+: :+:       :+:   :+: :+:   :+:    :+: :+:    :+: :+:    :+:     
     +:+    +:+ +:+       +:+  +:+   +:+  +:+    +:+ +:+    +:+ +:+    +:+     
     +#+    +:+ +#+  +:+  +#+ +#++:++#++: +#+    +:+ +#++:++#:  +#+    +:+     
     +#+  # +#+ +#+ +#+#+ +#+ +#+     +#+ +#+    +#+ +#+    +#+ +#+    +#+     
     #+#   +#+   #+#+# #+#+#  #+#     #+# #+#    #+# #+#    #+# #+#    #+#     
      ###### ###  ###   ###   ###     ### #########  ###    ###  ########      
                                                                               
                  S I G M A   T E C H N O L O G Y   G R O U P                  
                                                                               
                               Public Test Build                               
                           (c) 2017 Federacao SIGMA                            
                                www.sigmaco.org                                
                                                                               
 afxClass<afxSystem>::Mount(77fe33d0, 00000000, 00000000, 77fc12b4)
 afxClass<afxSystem>::AllocateObjects(1, 001ef2f4, 001ef20c)
 afxClass<afxSystem>::BuildObjects(1, 001ef2f4, 00000000)
 afxClass<afxSystem>::ConstructObject(0031f0f0)
 afxSystem.c:885?_AfxSysCtor(sys=0031f0f0)
 ADV afxSystem.c:906?_AfxSysCtor
    Memoy page size: 4096
 ADV afxSystem.c:907?_AfxSysCtor
    Logical processor count: 2
 afxClass<afxMemory>::Mount(0031f13c, 0031f124, 00000000, 77fc5ac0)
 afxMemory.c:144?AfxAcquireMemory(strategy=001ee2f8,hint="afxSystem.c:928!_AfxSysCtor")
 afxClass<afxMemory>::AllocateObjects(1, 001ee194, 001ee1a4)
 afxClass<afxMemory>::BuildObjects(1, 001ee194, 001ee18c)
 afxClass<afxMemory>::ConstructObject(0031f950)
 afxMemory.c:198?_AfxMemCtor(mem=0031f950)
 afxClass<afxThread>::Mount(0031f1fc, 0031f124, 00000000, 77fc18dc)
 afxClass<afxIoSystem>::Mount(0031f2bc, 0031f124, 00000000, 77fc3094)
 afxClass<afxIoSystem>::AllocateObjects(1, 001ee2c0, 001ee194)
 afxClass<afxIoSystem>::BuildObjects(1, 001ee2c0, 001ee2c4)
 afxClass<afxIoSystem>::ConstructObject(0031ff30)
 afxIoSystem.c:706?_AfxIoCtor(io=0031ff30)
 afxArena.c:767?AfxAcquireArena(aren=0031ff7c)
 afxArena.c:768?AfxAcquireArena(spec=00000000,hint="afxIoSystem.c:722!_AfxIoCtor")
 afxClass<afxFile>::Mount(0031ffd4, 0031ff64, 00000000, 77fc2dd8)
 afxClass<afxArchive>::Mount(00320094, 0031ff64, 0031ffd4, 77fc2758)
 afxClass<afxResource>::Mount(00320214, 0031ff64, 00000000, 77fc4550)
 afxClass<afxUrd>::Mount(00320154, 0031ff64, 00000000, 77fc4b30)
 afxIoSystem.c:412?AfxMountStoragePoints(0031ff30,6,001ee4bc)
 Point "." 5 mounted -> "E:/qwadro/afx".
 Point "system" 5 mounted -> "E:/qwadro/afx/system32".
 Point "sound" 5 mounted -> "E:/qwadro/afx/sound".
 Point "tmp" 7 mounted -> "E:/qwadro/afx/tmp".
 Point "data" 5 mounted -> "E:/qwadro/afx/data".
 Point "art" 5 mounted -> "E:/qwadro/afx/art".
 afxClass<afxModule>::Mount(0031f37c, 0031f124, 00000000, 77fbff68)
 afxModule.c:93?AfxAcquireModules(uri=system/e2coree.dll)
 afxClass<afxModule>::AllocateObjects(1, 0031f8e0, 001ee178)
 afxClass<afxModule>::BuildObjects(1, 0031f8e0, 001ee3e8)
 afxClass<afxModule>::ConstructObject(003245f0)
 afxModule.c:170?_AfxMdleCtor(uri:system/e2coree.dll)
 afxClass<afxHid>::Mount(0031f43c, 0031f124, 00000000, 77fc3800)
 afxClass<afxKeyboard>::Mount(0031f4fc, 0031f124, 0031f43c, 77fc414c)
 afxClass<afxMouse>::Mount(0031f5bc, 0031f124, 0031f43c, 77fc42ec)
 afxClass<afxDrawSystem>::Mount(0031f67c, 0031f124, 00000000, 77fc8734)
 afxClass<afxApplication>::Mount(0031f73c, 0031f124, 0031f1fc, 77fbf000)
 afxKeyboard.c:189?AfxAcquireKeyboards(port=0)
 afxClass<afxKeyboard>::AllocateObjects(1, 0031f8e4, 001ee1ac)
 afxClass<afxKeyboard>::BuildObjects(1, 0031f8e4, 001ee19c)
 afxClass<afxKeyboard, afxHid>ConstructingObject(00324720)
 afxClass<afxHid>::ConstructObject(00324720)
 afxHid.c:226?_AfxHidCtor(hid=00324720)
 afxClass<afxKeyboard>::ConstructObject(00324720)
 afxKeyboard.c:252?_AfxKbdCtor(kbd=00324720)
 afxClass<afxDrawSystem>::AllocateObjects(1, 001ef2f0, 001ef20c)
 afxClass<afxDrawSystem>::BuildObjects(1, 001ef2f0, 001ef2ec)
 afxClass<afxDrawSystem>::ConstructObject(00324fb0)
 afxDrawSystem.c:461?_AfxDsysCtor(dsys=00324fb0)
 afxClass<afxDrawDriver>::Mount(00324ff8, 00324fe4, 00000000, 77fc74e4)
 afxClass<afxDrawThread>::Mount(003250b8, 00324fe4, 0031f1fc, 77fc8a64)
New texture codec registered.
Name: SIGGL
Author: SIGMA Technology Group
Version: 0.5.1
Note: 
 Truecolor Targa texture serializer installed!
 afxModule.c:93?AfxAcquireModules(uri=e2draw.icd)
 afxClass<afxModule>::AllocateObjects(1, 003251e4, 001eed30)
 afxClass<afxModule>::BuildObjects(1, 003251e4, 001eee1c)
 afxClass<afxModule>::ConstructObject(00325fd0)
 afxModule.c:170?_AfxMdleCtor(uri:e2draw.icd)
 afxDrawDriver.c:215?AfxRegisterDrawDriver(spec=509b7de8)
 afxClass<afxDrawDriver>::AllocateObjects(1, 001eed6c, 001eed0c)
 afxClass<afxDrawDriver>::BuildObjects(1, 001eed6c, 509b7de8)
 afxClass<afxDrawDriver>::ConstructObject(003276c0)
 afxDrawDriver.c:271?_AfxDdrvCtor(ddrv=003276c0)
 afxClass<afxDrawScript>::Mount(00327710, 003276fc, 00000000, 77fc8194)
 afxClass<afxDrawQueue>::Mount(003277d0, 003276fc, 00000000, 77fc8054)
 afxClass<afxDrawContext>::Mount(00327890, 003276fc, 00000000, 77fc6020)
 afxClass<afxDrawOutput>::Mount(00327950, 003276fc, 00000000, 77fc7a94)
 afxClass<afxDrawInput>::Mount(00327a10, 003276fc, 00000000, 77fc7860)
 Listing mem available display devices...

 #0 = Intel(R) HD Graphics (\\.\DISPLAY1) 8000005
 #1 = RDPDD Chained DD (\\.\DISPLAYV1) 200008
 #2 = RDP Encoder Mirror Driver (\\.\DISPLAYV2) 200008
 #3 = RDP Reflector Display Driver (\\.\DISPLAYV3) 200008
 sglDrawDriver.c:1241?_SglCreateCombinedDeviceContext(oglWndClss=00327be4,shareCtx=00000000,phwnd=0032c680,phdc=0032c684,phrc=0032c68c)
 wglCreateContext fallback @ 0 found.
 wglDeleteContext fallback @ 1 found.
 wglGetCurrentContext fallback @ 2 found.
 wglGetCurrentDC fallback @ 3 found.
 wglGetProcAddress fallback @ 4 found.
 wglMakeCurrent fallback @ 5 found.
 wglChoosePixelFormatARB @ 6 found.
 wglDescribePixelFormat fallback @ 7 found.
 wglSetPixelFormat fallback @ 8 found.
 wglGetPixelFormat fallback @ 9 found.
 wglSwapBuffers fallback @ 10 found.
 wglChoosePixelFormatARB @ 11 found.
 wglMakeContextCurrentARB @ 12 found.
 wglGetCurrentReadDCARB @ 13 found.
 wglCreateContextAttribsARB @ 14 found.
 wglGetExtensionsStringARB @ 15 found.
 wglSwapIntervalEXT @ 16 found.
 wglCreateContext fallback @ 0 found.
 wglDeleteContext fallback @ 1 found.
 wglGetCurrentContext fallback @ 2 found.
 wglGetCurrentDC fallback @ 3 found.
 wglGetProcAddress fallback @ 4 found.
 wglMakeCurrent fallback @ 5 found.
 wglChoosePixelFormat fallback @ 6 found.
 wglDescribePixelFormat fallback @ 7 found.
 wglSetPixelFormat fallback @ 8 found.
 wglGetPixelFormat fallback @ 9 found.
 wglSwapBuffers fallback @ 10 found.
 ADV sglDrawDriver.c:1557?_SglBuildDpu
    677 381 1920 1080 96 96 32 1 36 36 51 60 1 
 ERR sglDrawDriver.c:1025?SglGetPixelFormat
    
 ERR sglDrawDriver.c:1025?SglGetPixelFormat
    
 ERR sglDrawDriver.c:1013?SglDescribePixelFormat
    
 ERR sglDrawDriver.c:1013?SglDescribePixelFormat
    
 glPixelStoref @ 0 found.
 glPixelStorei @ 1 found.
 glReadBuffer @ 2 found.
 glReadPixels @ 3 found.
 glGetBooleanv @ 4 found.
 glGetDoublev @ 5 found.
 glGetError @ 6 found.
 glGetFloatv @ 7 found.
 glGetIntegerv @ 8 found.
 glGetString @ 9 found.
 glGetTexImage @ 10 found.
 glGetTexParameterfv @ 11 found.
 glGetTexParameteriv @ 12 found.
 glGetTexLevelParameterfv @ 13 found.
 glGetTexLevelParameteriv @ 14 found.
 glIsEnabled @ 15 found.
 glDepthRange @ 16 found.
 glViewport @ 17 found.
 glCullFace @ 0 found.
 glFrontFace @ 1 found.
 glHint @ 2 found.
 glLineWidth @ 3 found.
 glPointSize @ 4 found.
 glPolygonMode @ 5 found.
 glScissor @ 6 found.
 glTexParameterf @ 7 found.
 glTexParameterfv @ 8 found.
 glTexParameteri @ 9 found.
 glTexParameteriv @ 10 found.
 glTexImage1D @ 11 found.
 glTexImage2D @ 12 found.
 glDrawBuffer @ 13 found.
 glClear @ 14 found.
 glClearColor @ 15 found.
 glClearStencil @ 16 found.
 glClearDepth @ 17 found.
 glStencilMask @ 18 found.
 glColorMask @ 19 found.
 glDepthMask @ 20 found.
 glDisable @ 21 found.
 glEnable @ 22 found.
 glFinish @ 23 found.
 glFlush @ 24 found.
 glBlendFunc @ 25 found.
 glLogicOp @ 26 found.
 glStencilFunc @ 27 found.
 ADV sglDrawDriver.c:1586?_SglBuildDpu
    DPU#0 Intel(R) HD Graphics
 ADV sglDrawDriver.c:1587?_SglBuildDpu
    DPU#0 3.3.0 - Build 10.18.10.5161
New draw driver registered.
Name: OpenGL/Vulkan Continuous Integration over Qwadro
Author: SIGMA Technology Group
Version: 0.7.2
Note: 
           :::::::::::     :::     :::::::::   ::::::::      :::               
               :+:       :+: :+:   :+:    :+: :+:    :+:   :+: :+:             
               +:+      +:+   +:+  +:+    +:+ +:+         +:+   +:+            
               +#+     +#++:++#++: +#++:++#:  :#:        +#++:++#++:           
               +#+     +#+     +#+ +#+    +#+ +#+   +#+# +#+     +#+           
               #+#     #+#     #+# #+#    #+# #+#    #+# #+#     #+#           
               ###     ###     ### ###    ###  ########  ###     ###           
                                                                               
                  S I G M A   T E C H N O L O G Y   G R O U P                  
                                                                               
                               Public Test Build                               
                           (c) 2017 Federacao SIGMA                            
                                www.sigmaco.org                                
                                                                               
 Loading draw ICDs...
 afxModule.c:93?AfxAcquireModules(uri=e2draw.icd)
 afxModule.c:93?AfxAcquireModules(uri=e2newton.icd)
 afxClass<afxModule>::AllocateObjects(1, 001eebf4, 001eeb50)
 afxClass<afxModule>::BuildObjects(1, 001eebf4, 001eebf8)
 afxClass<afxModule>::ConstructObject(0313ff50)
 afxModule.c:170?_AfxMdleCtor(uri:e2newton.icd)
 afxDrawThread.c:63?AfxAcquireDrawThreads(spec=00000000,cnt=2)
 afxClass<afxDrawThread>::AllocateObjects(1, 001eeea0, 001eed74)
 afxClass<afxDrawThread>::BuildObjects(1, 001eeea0, 00000000)
 afxClass<afxDrawThread, afxThread>ConstructingObject(003ea8b0)
 afxClass<afxThread>::ConstructObject(003ea8b0)
 afxThread.c:1258?_AfxThrCtor(003ea8b0)
 afxClass<afxDrawThread>::ConstructObject(003ea8b0)
 afxDrawThread.c:156?_AfxDthrCtor(dthr=003ea8b0)
 afxClass<afxDrawThread>::AllocateObjects(1, 001eeea4, 001eed74)
 afxClass<afxDrawThread>::BuildObjects(1, 001eeea4, 00000000)
 afxClass<afxDrawThread, afxThread>ConstructingObject(003ea9e0)
 afxClass<afxThread>::ConstructObject(003ea9e0)
 afxThread.c:1258?_AfxThrCtor(003ea9e0)
 afxClass<afxDrawThread>::ConstructObject(003ea9e0)
 afxDrawThread.c:156?_AfxDthrCtor(dthr=003ea9e0)
 afxThread.c:1133?AfxSetThreadAffinity(thr=003ea8b0)
 afxThread.c:1144?AfxRunThread(thr=003ea8b0)
 afxThread.c:1133?AfxSetThreadAffinity(thr=003ea9e0)
 afxThread.c:1144?AfxRunThread(thr=003ea9e0)
 afxDrawContext.c:560?AfxAcquireDrawContexts(spec=001ef2b8,cnt=1)
 afxClass<afxDrawContext>::AllocateObjects(1, 012d5038, 001ef1ec)
 afxClass<afxDrawContext>::BuildObjects(1, 012d5038, 001ef2b8)
 afxClass<afxDrawContext>::ConstructObject(0450bbc0)
 afxDrawContext.c:639?_AfxDctxCtor(dctx=0450bbc0)
 afxArena.c:767?AfxAcquireArena(aren=0450c458)
 afxArena.c:768?AfxAcquireArena(spec=00000000,hint="afxDrawContext.c:658!_AfxDctxCtor")
 afxClass<afxBuffer>::Mount(0450bf14, 0450bc00, 00000000, 77fca048)
 afxClass<afxVertexBuffer>::Mount(0450bfd4, 0450bc00, 0450bf14, 77fcb6fc)
 afxClass<afxIndexBuffer>::Mount(0450c094, 0450bc00, 0450bf14, 77fca314)
 afxClass<afxSampler>::Mount(0450c154, 0450bc00, 00000000, 77fca714)
 afxClass<afxTexture>::Mount(0450c214, 0450bc00, 00000000, 77fcaed8)
 afxClass<afxSurface>::Mount(0450c2d4, 0450bc00, 0450c214, 77fcad5c)
 afxClass<afxShader>::Mount(0450c394, 0450bc00, 00000000, 77fca934)
 afxClass<afxLego>::Mount(0450bd94, 0450bc00, 00000000, 77fc9904)
 afxClass<afxCanvas>::Mount(0450bc14, 0450bc00, 00000000, 77fc8e80)
 afxClass<afxPipeline>::Mount(0450bcd4, 0450bc00, 00000000, 77fc9b90)
 afxClass<afxDrawOperation>::Mount(0450be54, 0450bc00, 00000000, 77fc9300)
 sglDrawContext.c:272?_SglDdrvVmtDctxCb(dctx=0450bbc0)
 Uploading draw operation 'data/pipeline/rgbaToRgba.xml'
 afxXml.c:976?AfxLoadXml(uri:data/pipeline/rgbaToRgba.xml)
 afxFile.c:344?AfxOpenFile(00000001,data/pipeline/rgbaToRgba.xml)
 afxClass<afxFile>::AllocateObjects(1, 001ee484, 001ee494)
 afxClass<afxFile>::BuildObjects(1, 001ee484, 001ee47c)
 afxClass<afxFile>::ConstructObject(003e9300)
 afxStream.c:600?AfxAcquireStream(ios=003e9334,flags=1,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ee4d4)
 Destructing instance 003e9300 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ee4d4)
 afxClass<afxDrawOperation>::AllocateObjects(1, 003e9a68, 001ee4cc)
 afxClass<afxDrawOperation>::BuildObjects(1, 003e9a68, 001ee750)
 afxClass<afxDrawOperation>::ConstructObject(0450d620)
 afxDrawOperation.c:659?_AfxDopCtor(dop=0450d620)
 afxPipeline.c:380?AfxBuildPipelines(dctx=0450bbc0)
 afxClass<afxPipeline>::AllocateObjects(1, 045239c8, 001ede74)
 afxClass<afxPipeline>::BuildObjects(1, 045239c8, 001edf68)
 afxClass<afxPipeline>::ConstructObject(0450d880)
 afxPipeline.c:452?_AfxPipCtor(pip=0450d880)
 afxShader.c:550?AfxAcquireShaders(cnt=1,uri=0450d750,shd=001ed8d8)
 Uploading shader 'data/pipeline/rgbaToRgba.xml?vs'
 afxXml.c:976?AfxLoadXml(uri:data/pipeline/rgbaToRgba.xml)
 afxFile.c:344?AfxOpenFile(00000001,data/pipeline/rgbaToRgba.xml)
 afxClass<afxFile>::AllocateObjects(1, 001ed158, 001ed168)
 afxClass<afxFile>::BuildObjects(1, 001ed158, 001ed150)
 afxClass<afxFile>::ConstructObject(0450ff70)
 afxStream.c:600?AfxAcquireStream(ios=0450ffa4,flags=1,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ed1a8)
 Destructing instance 0450ff70 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ed1a8)
 afxFile.c:364?AfxOpenReadableFile(data/pipeline/stdEnv.inc)
 afxClass<afxFile>::AllocateObjects(1, 001ecf44, 001ecf54)
 afxClass<afxFile>::BuildObjects(1, 001ecf44, 001ecf3c)
 afxClass<afxFile>::ConstructObject(0450ff70)
 afxStream.c:600?AfxAcquireStream(ios=0450ffa4,flags=5,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ecf94)
 Destructing instance 0450ff70 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ecf94)
 afxShader.c:397?AfxBuildShaders(cnt=1,blueprint=001ed4a4,shd=001ed8d8)
 afxClass<afxShader>::AllocateObjects(1, 001ed8d8, 001ed1a0)
 afxClass<afxShader>::BuildObjects(1, 001ed8d8, 001ed4a4)
 afxClass<afxShader>::ConstructObject(0450ff70)
 afxShader.c:660?_AfxShdCtor(shd=0450ff70)
 #version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

        
        layout(location = 0) in vec2 a_xy;

        out block
        {
            vec2 uv0;
        } sgl_v;

        void main()
        {
            gl_Position = vec4(a_xy, 0.0, 1.0);
            sgl_v.uv0 = vec2(gl_Position.xy * 0.5 + 0.5).xy;
        }
       
 sglShader.c:134?_AfxShdCtor(shd=0450ff70)
 afxObject<0450ff70>::InstallEventFilter(0450d880)
 afxShader.c:550?AfxAcquireShaders(cnt=1,uri=0450d7f0,shd=001ed8d8)
 Uploading shader 'data/pipeline/rgbaToRgba.xml?fs'
 afxXml.c:976?AfxLoadXml(uri:data/pipeline/rgbaToRgba.xml)
 afxFile.c:344?AfxOpenFile(00000001,data/pipeline/rgbaToRgba.xml)
 afxClass<afxFile>::AllocateObjects(1, 001ed158, 001ed168)
 afxClass<afxFile>::BuildObjects(1, 001ed158, 001ed150)
 afxClass<afxFile>::ConstructObject(045105a0)
 afxStream.c:600?AfxAcquireStream(ios=045105d4,flags=1,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ed1a8)
 Destructing instance 045105a0 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ed1a8)
 afxFile.c:364?AfxOpenReadableFile(data/pipeline/stdEnv.inc)
 afxClass<afxFile>::AllocateObjects(1, 001ecf44, 001ecf54)
 afxClass<afxFile>::BuildObjects(1, 001ecf44, 001ecf3c)
 afxClass<afxFile>::ConstructObject(045105a0)
 afxStream.c:600?AfxAcquireStream(ios=045105d4,flags=5,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ecf94)
 Destructing instance 045105a0 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ecf94)
 afxShader.c:397?AfxBuildShaders(cnt=1,blueprint=001ed4a4,shd=001ed8d8)
 afxClass<afxShader>::AllocateObjects(1, 001ed8d8, 001ed1a0)
 afxClass<afxShader>::BuildObjects(1, 001ed8d8, 001ed4a4)
 afxClass<afxShader>::ConstructObject(045112c0)
 afxShader.c:660?_AfxShdCtor(shd=045112c0)
 #version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

        
        uniform sampler2D samp;

        in block
        {
            vec2 uv0;
        } sgl_v;

        out vec4 sgl_rgba;

        void main()
        {
            sgl_rgba = texture(samp, sgl_v.uv0);
        }
       
 sglShader.c:134?_AfxShdCtor(shd=045112c0)
 afxObject<045112c0>::InstallEventFilter(0450d880)
 afxLego.c:218?AfxBuildLegos(dctx=0450bbc0)
 afxClass<afxLego>::AllocateObjects(1, 0453fda4, 001ed720)
 afxClass<afxLego>::BuildObjects(1, 0453fda4, 001eda94)
 afxClass<afxLego>::ConstructObject(0456eef0)
 afxLego.c:275?_AfxLegtCtor(legt=0456eef0)
 sglPipeline.c:293?_AfxPipCtor(pip=0450d880)
 afxPipeline.c:380?AfxBuildPipelines(dctx=0450bbc0)
 afxClass<afxPipeline>::AllocateObjects(1, 04523a28, 001ede74)
 afxClass<afxPipeline>::BuildObjects(1, 04523a28, 001edf68)
 afxClass<afxPipeline>::ConstructObject(045256a0)
 afxPipeline.c:452?_AfxPipCtor(pip=045256a0)
 afxShader.c:550?AfxAcquireShaders(cnt=1,uri=0456ef80,shd=001ed8d8)
 Uploading shader 'data/pipeline/rgbaToRgba.xml?vsFlippedY'
 afxXml.c:976?AfxLoadXml(uri:data/pipeline/rgbaToRgba.xml)
 afxFile.c:344?AfxOpenFile(00000001,data/pipeline/rgbaToRgba.xml)
 afxClass<afxFile>::AllocateObjects(1, 001ed158, 001ed168)
 afxClass<afxFile>::BuildObjects(1, 001ed158, 001ed150)
 afxClass<afxFile>::ConstructObject(045105a0)
 afxStream.c:600?AfxAcquireStream(ios=045105d4,flags=1,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ed1a8)
 Destructing instance 045105a0 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ed1a8)
 afxFile.c:364?AfxOpenReadableFile(data/pipeline/stdEnv.inc)
 afxClass<afxFile>::AllocateObjects(1, 001ecf44, 001ecf54)
 afxClass<afxFile>::BuildObjects(1, 001ecf44, 001ecf3c)
 afxClass<afxFile>::ConstructObject(045105a0)
 afxStream.c:600?AfxAcquireStream(ios=045105d4,flags=5,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ecf94)
 Destructing instance 045105a0 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ecf94)
 afxShader.c:397?AfxBuildShaders(cnt=1,blueprint=001ed4a4,shd=001ed8d8)
 afxClass<afxShader>::AllocateObjects(1, 001ed8d8, 001ed1a0)
 afxClass<afxShader>::BuildObjects(1, 001ed8d8, 001ed4a4)
 afxClass<afxShader>::ConstructObject(045105a0)
 afxShader.c:660?_AfxShdCtor(shd=045105a0)
 #version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

        
        const mat4 m = mat4(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        
        layout(location = 0) in vec2 a_xy;
        
        out block
        {
            vec2 uv0;
        } sgl_v;

        void main()
        {
            gl_Position = vec4(a_xy, 0.0, 1.0);
            sgl_v.uv0 = vec2(m * vec4(gl_Position.xy * 0.5 + 0.5, 0, 1)).xy;
        }
       
 sglShader.c:134?_AfxShdCtor(shd=045105a0)
 afxObject<045105a0>::InstallEventFilter(045256a0)
 afxShader.c:550?AfxAcquireShaders(cnt=1,uri=0450d750,shd=001ed8d8)
 Uploading shader 'data/pipeline/rgbaToRgba.xml?fs'
 afxXml.c:976?AfxLoadXml(uri:data/pipeline/rgbaToRgba.xml)
 afxFile.c:344?AfxOpenFile(00000001,data/pipeline/rgbaToRgba.xml)
 afxClass<afxFile>::AllocateObjects(1, 001ed158, 001ed168)
 afxClass<afxFile>::BuildObjects(1, 001ed158, 001ed150)
 afxClass<afxFile>::ConstructObject(0456ea70)
 afxStream.c:600?AfxAcquireStream(ios=0456eaa4,flags=1,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ed1a8)
 Destructing instance 0456ea70 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ed1a8)
 afxFile.c:364?AfxOpenReadableFile(data/pipeline/stdEnv.inc)
 afxClass<afxFile>::AllocateObjects(1, 001ecf44, 001ecf54)
 afxClass<afxFile>::BuildObjects(1, 001ecf44, 001ecf3c)
 afxClass<afxFile>::ConstructObject(0456ea70)
 afxStream.c:600?AfxAcquireStream(ios=0456eaa4,flags=5,start=00000000,len=0)
 afxClass<afxFile>::DismantleObjects(1, 001ecf94)
 Destructing instance 0456ea70 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ecf94)
 afxShader.c:397?AfxBuildShaders(cnt=1,blueprint=001ed4a4,shd=001ed8d8)
 afxClass<afxShader>::AllocateObjects(1, 001ed8d8, 001ed1a0)
 afxClass<afxShader>::BuildObjects(1, 001ed8d8, 001ed4a4)
 afxClass<afxShader>::ConstructObject(04559330)
 afxShader.c:660?_AfxShdCtor(shd=04559330)
 #version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

        
        uniform sampler2D samp;

        in block
        {
            vec2 uv0;
        } sgl_v;

        out vec4 sgl_rgba;

        void main()
        {
            sgl_rgba = texture(samp, sgl_v.uv0);
        }
       
 sglShader.c:134?_AfxShdCtor(shd=04559330)
 afxObject<04559330>::InstallEventFilter(045256a0)
 afxLego.c:218?AfxBuildLegos(dctx=0450bbc0)
 afxClass<afxLego>::AllocateObjects(1, 0453f144, 001ed720)
 afxClass<afxLego>::BuildObjects(1, 0453f144, 001eda94)
 afxClass<afxLego>::ConstructObject(0456ea70)
 afxLego.c:275?_AfxLegtCtor(legt=0456ea70)
 sglPipeline.c:293?_AfxPipCtor(pip=045256a0)
 afxSampler.c:53?AfxAcquireSamplers(cnt=1,spec=001eec80,spec=003e9a6c)
 afxClass<afxSampler>::AllocateObjects(1, 003e9a6c, 001ee980)
 afxClass<afxSampler>::BuildObjects(1, 003e9a6c, 001eec80)
 afxClass<afxSampler>::ConstructObject(0456eb00)
 afxSampler.c:111?_AfxSampCtor(samp=0456eb00)
 sglSampler.c:143?_AfxSmpCtor(smp=0456eb00)
 afxClass<afxVertexBuffer>::AllocateObjects(1, 003e9a70, 001ee9d4)
 afxClass<afxVertexBuffer>::BuildObjects(1, 003e9a70, 001ee9ac)
 afxClass<afxVertexBuffer, afxBuffer>ConstructingObject(030e8030)
 afxClass<afxBuffer>::ConstructObject(030e8030)
 afxBuffer.c:247?_AfxBufCtor(buf=030e8030)
 sglBuffer.c:329?_SglBufCtor(buf=030e8030)
 afxClass<afxVertexBuffer>::ConstructObject(030e8030)
 afxVertexBuffer.c:446?_AfxVbufCtor(vbuf=030e8030)
 afxDrawQueue.c:314?AfxAcquireDrawQueues(ddrv=003276c0,spec=001eedfc,cnt=1)
 afxClass<afxDrawQueue>::AllocateObjects(1, 030aa330, 001eecfc)
 afxClass<afxDrawQueue>::BuildObjects(1, 030aa330, 001eedfc)
 afxClass<afxDrawQueue>::ConstructObject(003e9640)
 afxDrawQueue.c:385?_AfxDqueCtor(dque=003e9640)
 afxArena.c:767?AfxAcquireArena(aren=003e96c4)
 afxArena.c:768?AfxAcquireArena(spec=00000000,hint="afxDrawQueue.c:404!_AfxDqueCtor")
 sglDrawQueue.c:1715?_SglDdrvVmtDqueCb(dque=003e9640)
 afxApplication.c:243?AfxAcquireApplications(spec=001ef294,cnt=1)
 afxClass<afxApplication>::AllocateObjects(1, 001ef2b4, 001ef204)
 afxClass<afxApplication>::BuildObjects(1, 001ef2b4, 001ef294)
 afxClass<afxApplication, afxThread>ConstructingObject(04559620)
 afxClass<afxThread>::ConstructObject(04559620)
 afxThread.c:1258?_AfxThrCtor(04559620)
 afxClass<afxApplication>::ConstructObject(04559620)
 afxApplication.c:331?_AfxAppCtor(app=04559620)
 afxMouse.c:273?AfxAcquireMouses(port=0)
 afxClass<afxMouse>::AllocateObjects(1, 04559880, 001eedf4)
 afxClass<afxMouse>::BuildObjects(1, 04559880, 001eede4)
 afxClass<afxMouse, afxHid>ConstructingObject(03023d40)
 afxClass<afxHid>::ConstructObject(03023d40)
 afxHid.c:226?_AfxHidCtor(hid=03023d40)
 afxClass<afxMouse>::ConstructObject(03023d40)
 afxMouse.c:335?_AfxMseCtor(mse=03023d40)
 afxDrawInput.c:259?AfxAcquireDrawInputs(spec=001eee90,cnt=1)
 afxClass<afxDrawInput>::AllocateObjects(1, 045598a4, 001eedec)
 afxClass<afxDrawInput>::BuildObjects(1, 045598a4, 001eee90)
 afxClass<afxDrawInput>::ConstructObject(003e9300)
 afxDrawInput.c:343?_AfxDinCtor(din=003e9300)
 afxClass<afxWidget>::Mount(045596fc, 045596e8, 00000000, 77fcd2b0)
 afxClass<afxSimulation>::Mount(045597bc, 045596e8, 00000000, 77fcdb48)
 afxApplication.c:194?AfxRunApplication(app=04559620)
 afxThread.c:1144?AfxRunThread(thr=04559620)
 mmplayer.c:102?AfxEnterApplication(app=04559620)
 Uploading texture 'art/world.tga'
 afxFile.c:344?AfxOpenFile(00000001,art/world.tga)
 afxClass<afxFile>::AllocateObjects(1, 001ee620, 001ee630)
 afxClass<afxFile>::BuildObjects(1, 001ee620, 001ee618)
 afxClass<afxFile>::ConstructObject(0453bf30)
 afxStream.c:600?AfxAcquireStream(ios=0453bf64,flags=1,start=00000000,len=0)
 ADV afxTexture.c:69?AfxAcquireTextureBlueprint
    texb->fcc == AFX_FCC_TEXB
 afxTexture.c:833?AfxBuildTextures(cnt=1,blueprint=001ee6f0,tex=012d501c)
 afxClass<afxTexture>::AllocateObjects(1, 012d501c, 001ee5f8)
 afxClass<afxTexture>::BuildObjects(1, 012d501c, 001ee6f0)
 afxClass<afxTexture>::ConstructObject(03023c60)
 afxTexture.c:1024?_AfxTexCtor(tex=03023c60)
 sglTexture.c:987?_SglTexCtor(tex=03023c60)
 afxClass<afxFile>::DismantleObjects(1, 001ee670)
 Destructing instance 0453bf30 of afxFile class.
 afxClass<afxFile>::DeallocateObjects(1, 001ee670)
 afxFile.c:344?AfxOpenFile(00000002,tmp/world2.tga)
 afxClass<afxFile>::AllocateObjects(1, 001eea60, 001eea70)
 afxClass<afxFile>::BuildObjects(1, 001eea60, 001eea58)
 afxClass<afxFile>::ConstructObject(0453bf30)
 afxStream.c:600?AfxAcquireStream(ios=0453bf64,flags=2,start=00000000,len=0)